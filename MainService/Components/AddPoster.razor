@page "/addposter"
@page "/editposter/{ParserId}"
@using MainService.Components.Base
@using MainService.Interfaces
@using MainService.Models
@using ModelsHelper.Models

@inject IPosterService _posterService

<div>
    <h2 class="center">Setting</h2>
    <div class="add-poster-layout">
        <div>
            <Text Label="Description" @bind-field="_posterSettings.Description" />
            <Option Label="Source" Options="Source.GetAll()" OnChanged="o => _posterSettings.Source = o"/>
            <Text Label="Group" @bind-field="_posterSettings.Group" />
            <Number Label="Timeout (seconds)" @bind-field="_posterSettings.Timeout" />
            <Number Label="Hold (seconds)" @bind-field="_posterSettings.Hold" />
            <Number Label="Counts" @bind-field="_posterSettings.Counts" />
            <Number Label="How may retry after error" @bind-field="_posterSettings.RetryAfterErrorCount" />
            <Text Label="Tags" OnChanged="o => _posterSettings.Tags = o.Split('|').ToList()" InputValue="@string.Join('|', _posterSettings.Tags)"/>
            <Checkbox Label="Continue posting" @bind-field="_posterSettings.ContinuePosting" />
            <Checkbox Label="Disabled" @bind-field="_posterSettings.Disabled" />
        </div>
        <div>
            <Checkbox Label="Use scheduling" @bind-field="_posterSettings.UseScheduling" />
            <Number Label="Scheduling interval" @bind-field="_posterSettings.ScheduleInterval" />
            <Checkbox Label="Ignore history" @bind-field="_posterSettings.IgnoreHistory" />
            <Checkbox Label="Use images only" @bind-field="_posterSettings.UseImagesOnly" />
            <Checkbox Label="Use random" @bind-field="_posterSettings.UseRandom" />
            <Checkbox Label="Use settings text" @bind-field="_posterSettings.UseSettingsText" />
            <Text Label="Text for post" @bind-field="_posterSettings.TextForPost" />
        </div>
    </div>
    <div class="center">
        <Button Action="OnSave">Save</Button>
        @if (_saveError)
        {
            <div @onclick="() => _saveError = false">Can't save setting</div>
        }
    </div>

</div>

@code {

    [Parameter]
    public string ParserId { get; set; }

    private PosterSettings _posterSettings = new ();

    private bool _saveError;

    protected override async Task OnParametersSetAsync()
    {
        if (ParserId != null)
        {
            _posterSettings = await _posterService.GetPosterSettings(ParserId);
        }
    }

    public async Task OnSave()
    {
        _saveError = !await _posterService.SavePosterSettings(_posterSettings);
    }
}
