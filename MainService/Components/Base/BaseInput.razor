@typeparam TParam;

<div class="@(Css ?? "input-component")">
    <label for="@_id">@Label</label>
    <input class="input" id="@_id" type="@Type" @onchange="OnChangedValue" value="@InputValue" />
</div>

@code {
    [Parameter]
    public TParam InputValue { get; set; }

    [Parameter]
    public string Label { get; set; }

    protected virtual string Type { get; set; } = "text";

    [Parameter]
    public EventCallback<TParam> OnChanged { get; set; }

    private readonly string _id;

    protected virtual string Css { get; set; }

    public BaseInput()
    {
        _id = Guid.NewGuid().ToString();
    }

    private void OnChangedValue(ChangeEventArgs val)
    {
        if (!string.IsNullOrEmpty(val.Value?.ToString()))
        {
            var result = (TParam)Convert.ChangeType(val.Value, typeof(TParam));
            OnChanged.InvokeAsync(result);
        }
    } 
}
